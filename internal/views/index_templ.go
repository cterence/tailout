// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/cterence/tailout/internal/views/components"

func Index() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\" class=\"text-gray-900 antialiased leading-tight\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<body class=\"min-h-screen bg-gray-100 p-4\"><div class=\"md:container md:mx-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Title().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<h2 class=\"text-xl my-4 text-gray-600\">create an exit node in your tailnet in seconds.</h2><div><button id=\"create-btn\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 mr-2 rounded\" hx-post=\"/create\" hx-indicator=\"#spinner\" hx-target=\"#create-btn\" hx-on::before-request=\"disableButton(event)\" hx-on::after-request=\"enableButton(event)\" hx-swap=\"none\">Create exit node</button> <button id=\"stop-btn\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" hx-post=\"/stop\" hx-swap=\"none\" hx-indicator=\"#spinner\" hx-on::before-request=\"disableButton(event)\" hx-on::after-request=\"enableButton(event)\">Stop all exit nodes</button></div><div class=\"overflow-x-auto my-4\"><table class=\"table-auto w-full text-sm text-left text-gray-500\"><thead class=\"text-xs text-gray-700 uppercase bg-gray-50\"><tr><th class=\"px-4 py-2\">Hostname</th><th class=\"px-4 py-2\">Address</th><th class=\"px-4 py-2\">Last seen</th></tr></thead> <tbody hx-get=\"/status\" hx-trigger=\"load,every 5s\"></tbody></table></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body><script>\n    function disableButton(e) {\n        htmx.removeClass(e.detail.elt, 'hover:bg-blue-700');\n        htmx.removeClass(e.detail.elt, 'bg-blue-500');\n        htmx.addClass(e.detail.elt, 'cursor-not-allowed');\n        htmx.addClass(e.detail.elt, 'bg-gray-300');\n        e.disabled = true;\n    }\n\n    function enableButton(e) {\n        htmx.removeClass(e.detail.elt, 'cursor-not-allowed');\n        htmx.removeClass(e.detail.elt, 'bg-gray-300');\n        htmx.addClass(e.detail.elt, 'hover:bg-blue-700');\n        htmx.addClass(e.detail.elt, 'bg-blue-500');\n        e.disabled = false;\n    }\n    </script></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
