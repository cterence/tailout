name: e2e

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  BINARY_NAME: xit
  # xit environment variables
  XIT_REGION: eu-west-3
  XIT_NON_INTERACTIVE: "true"
  XIT_CONNECT: "true"
  XIT_SHUTDOWN: 5m
  XIT_TS_TAILNET: ${{ secrets.TS_TAILNET }}
  XIT_TS_API_KEY: ${{ secrets.TS_API_KEY }}
  XIT_TS_AUTH_KEY: ${{ secrets.TS_AUTH_KEY }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build xit
        uses: ./.github/actions/build
        with:
          binary_name: ${{ env.BINARY_NAME }}

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        include:
          - first_command: "xit init"
          - first_command: "xit create"
            second_command: "xit status"
            third_command: "xit disconnect"
          - first_command: "xit create"
            second_command: "xit disconnect"
            third_command: "xit status"
    steps:
      - uses: actions/checkout@v3
      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          region: ${{ env.XIT_REGION }}
          role_arn: ${{ secrets.AWS_GITHUB_ACTIONS_XIT_ROLE_ARN }}
          tailscale_authkey: ${{ secrets.TS_GITHUB_ACTIONS_AUTH_KEY }}
          binary_name: ${{ env.BINARY_NAME }}
      - name: First command
        run: ${{ matrix.first_command }}
      - name: Second command
        if: ${{ matrix.second_command != '' }}
        run: ${{ matrix.second_command }}
      - name: Third command
        if: ${{ matrix.third_command != '' }}
        run: ${{ matrix.third_command }}
      # TODO: check if the public IP address matches the one from the new instance

  # TODO: find a better concurrency pattern
  cleanup:
    runs-on: ubuntu-latest
    needs: e2e-tests
    concurrency:
      group: cleanup
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          region: ${{ env.XIT_REGION }}
          role_arn: ${{ secrets.AWS_GITHUB_ACTIONS_XIT_ROLE_ARN }}
          tailscale_authkey: ${{ secrets.TS_GITHUB_ACTIONS_AUTH_KEY }}
          binary_name: ${{ env.BINARY_NAME }}
      - name: Cleanup
        run: xit stop --all
      # TODO: Add cleanup for github nodes as well
